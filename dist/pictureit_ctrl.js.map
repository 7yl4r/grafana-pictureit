{"version":3,"sources":["../src/pictureit_ctrl.js"],"names":["ValueColorMapping","value","colorName","ColorMapping","name","color","Sensor","metric","xlocation","ylocation","format","bgcolor","fontColor","size","bordercolor","visible","renderValue","valueFormatted","valueUnit","displayName","link_url","resolvedLink","rectangular","group","Group","alignment","x","y","sameSize","width","_","MetricsPanelCtrl","getWidth","interact","panelDefaults","colorMappings","colorMappingMap","valueMappings","metricValues","seriesList","series","bgimage","sensors","groups","useLabelGroupings","height","templateSrv","PictureItCtrl","$scope","$injector","defaults","panel","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","target","datapoints","index","splice","lastSensor","sensor","result","ctrl","map","g","alert","JSON","stringify","addEditorTab","scope","elem","attrs","$panelContainer","find","pixelStrToNum","str","parseInt","substr","getGroup","css","metricMap","keyBy","valueMappingsMap","mapping","dragEventSetup","sensorWidth","font","newValue","Math","max","panelWidth","ylocationStr","toString","xlocationStr","alignSensors","sizeStr","borderRadius","undefined","replace","effectiveName","mValue","valueMapping","colorMapping","sprintf","window","draggable","inertia","restrict","restriction","endOnly","elementRect","top","left","bottom","right","autoScroll","onmove","event","parseFloat","getAttribute","dx","dy","style","webkitTransform","transform","setAttribute","onend","imageHeight","document","getElementById","offsetHeight","imageWidth","offsetWidth","xpercentage","ypercentage","newX","round","newY","nextTop","nextX","sensorHeight","renderingCompleted","refreshColorMappings","indexOf","toRemove","templateUrl"],"mappings":"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","file":"pictureit_ctrl.js","sourcesContent":["import _ from \"lodash\";\nimport {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport \"./sprintf.js\";\nimport \"./angular-sprintf.js\";\nimport getWidth from './stringwidth/strwidth.js';\nimport interact from './libs/interact';\n\nconst panelDefaults = {\n    colorMappings: [],\n    colorMappingMap: [],\n    valueMappings: [],\n    metricValues: [],\n    seriesList: [],\n    series: [],\n    bgimage: '',\n    sensors: [],\n    groups: [],\n    useLabelGroupings: false,\n    height: '400px',\n    width: '100px',\n    templateSrv: null\n};\n\nexport class PictureItCtrl extends MetricsPanelCtrl {\n\n\n    constructor($scope, $injector, templateSrv) {\n        super($scope, $injector);\n        _.defaults(this.panel, panelDefaults);\n        this.templateSrv = templateSrv;\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-initialized', this.render.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    }\n\n    onDataReceived(dataList) {\n        var dataListLength = dataList.length;\n        this.panel.metricValues = [];\n        for (var series = 0; series < dataListLength; series++) {\n            this.panel.metricValues.push({\n                name: dataList[series].target,\n                value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0]\n            });\n        }\n\n        this.render();\n    }\n\n    deleteSensor(index) {\n        this.panel.sensors.splice(index, 1);\n    }\n\n    addSensor() {\n        if (this.panel.sensors.length === 0) {\n            this.panel.sensors.push(\n                new Sensor('A', 50, 25, '%.2f', 'rgba(0, 0, 0, 0.58)', '#ffffff', 14, 'rgb(251, 4, 4)', true)\n            );\n        } else {\n            var lastSensor = this.panel.sensors[this.panel.sensors.length - 1];\n            this.panel.sensors.push(\n                new Sensor(lastSensor.metric, 50, 25, lastSensor.format, lastSensor.bgcolor, lastSensor.color, lastSensor.size, lastSensor.bordercolor, true)\n            );\n        }\n    }\n\n    moveSensorUp(index) {\n        var sensor = this.panel.sensors[index]\n        this.panel.sensors.splice(index, 1)\n        this.panel.sensors.splice(index-1,0,sensor);\n    }\n\n    moveSensorDown(index) {\n        var sensor = this.panel.sensors[index]\n        this.panel.sensors.splice(index, 1)\n        this.panel.sensors.splice(index+1,0,sensor);\n    }\n\n    deleteGroup(index) {\n        this.panel.groups.splice(index, 1);\n    }\n\n    addGroup() {\n        this.panel.groups.push(\n            new Group('A', \"left\", 200, 200)\n        );\n    }\n\n    getAvailableGroups() {\n\n        var result = ctrl.panel.groups.map(g => g.name);\n        alert(\"RESULT: \" + JSON.stringify(result))\n        return result;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Sensor', 'public/plugins/bessler-pictureit-panel/editor.html', 2);\n        this.addEditorTab('Color Mapping', 'public/plugins/bessler-pictureit-panel/colors.html', 3);\n        this.addEditorTab('Value Color Mapping', 'public/plugins/bessler-pictureit-panel/mappings.html', 4);\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        const $panelContainer = elem.find('.panel-container');\n\n        function pixelStrToNum(str) {\n            return parseInt(str.substr(0, str.length - 2));\n        }\n\n        function getGroup(name) {\n            for (let group of ctrl.panel.groups) {\n                if(group.name == name){\n                    return group;\n                }\n            }\n            return null;\n        }\n\n        function render() {\n\n            if (!ctrl.panel.sensors) {\n                return;\n            }\n\n            let width = pixelStrToNum($panelContainer.css(\"width\"));\n            let height = pixelStrToNum($panelContainer.css(\"height\"));\n            let metricMap = _.keyBy(ctrl.panel.metricValues, value => value.name);\n            let valueMappingsMap = _.keyBy(ctrl.panel.valueMappings, mapping => mapping.value);\n\n            for (let sensor of ctrl.panel.sensors) {\n\n                dragEventSetup(sensor);\n\n                var sensorWidth = getWidth(sensor.displayName, { font: 'Arial', size: sensor.size }) + 20;\n                if(ctrl.panel.useLabelGroupings){\n                    var group = getGroup(sensor.group.name)\n                    if(group != null && group.sameSize){\n                        var newValue = Math.max(group.width, sensorWidth);\n                        group.width = newValue;\n                        sensor.width = newValue;\n                    }else{\n                        sensor.panelWidth = sensorWidth + \"px\";  \n                        sensor.width = sensorWidth;\n                    }\n                }else{\n                    sensor.panelWidth = sensorWidth + \"px\";  \n                    sensor.width = sensorWidth;\n                }\n            }\n\n            for (let sensor of ctrl.panel.sensors) {\n                if(ctrl.panel.useLabelGroupings && group.sameSize){\n                    var group = getGroup(sensor.group.name)\n                    if(group != null){\n                        sensor.panelWidth = group.width + \"px\";  \n                        sensor.width = group.width;\n                    }\n                }\n                sensor.visible = sensor.xlocation < width && sensor.ylocation < height;\n                if(!ctrl.panel.useLabelGroupings){\n                    sensor.ylocationStr = sensor.ylocation.toString() + \"px\";\n                    sensor.xlocationStr = sensor.xlocation.toString() + \"px\";\n                }else{\n                    alignSensors();\n                }\n                sensor.sizeStr = sensor.size.toString() + \"px\";\n                sensor.bgcolor = 'rgb(64, 64, 64)';\n                sensor.bordercolor = 'rgb(64, 64, 64)';\n                \n                if(sensor.rectangular){\n                    sensor.borderRadius = '5%'\n                }else{\n                    sensor.borderRadius = '50%'\n                }\n\n                if(sensor.link_url != undefined) {\n                    sensor.resolvedLink =ctrl.templateSrv.replace(sensor.link_url);\n                }\n\n                //We need to replace possible variables in the sensors name\n                var effectiveName = ctrl.templateSrv.replace(sensor.metric);\n\n                var mValue = metricMap[effectiveName];\n                if (mValue === undefined) {\n                    mValue = {name: \"dummy\", value: 'null'};\n                }\n\n                var valueMapping = valueMappingsMap[mValue.value];\n\n                if (valueMapping !== undefined) {\n                    let colorMapping = ctrl.panel.colorMappingMap[valueMapping.colorName];\n                    if (colorMapping !== undefined) {\n                        sensor.bgcolor = colorMapping.color;\n                        sensor.bordercolor = colorMapping.color;\n                    }\n                }\n\n                //finally format the value itself\n                sensor.valueFormatted = sprintf(sensor.format,mValue.value);\n            }\n\n            \n        }\n\n        function dragEventSetup(sensor) {\n            \n            window.interact('#' + sensor.metric).draggable({\n                inertia: true,\n                restrict: {\n                restriction: \"#draggableparent\",\n                endOnly: true,\n                elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                },\n                autoScroll: true,\n                onmove: function (event) {\n                    var target = event.target,\n                    // keep the dragged position in the data-x/data-y attributes\n                    x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,\n                    y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n                    // translate the element\n                    target.style.webkitTransform =\n                    target.style.transform =\n                    'translate(' + x + 'px, ' + y + 'px)';\n\n                    // update the position attributes\n                    target.setAttribute('data-x', x);\n                    target.setAttribute('data-y', y);\n\n                },\n                onend: function (event) {\n                    var target = event.target;\n\n                    let imageHeight = document.getElementById('pictureit-image').offsetHeight;\n                    let imageWidth = document.getElementById('pictureit-image').offsetWidth;\n\n                    let x = target.getAttribute('data-x');\n                    let y = target.getAttribute('data-y')\n\n                    // get percentage of relative distance from starting point \n                    let xpercentage = (x * 100) / imageWidth;\n                    let ypercentage = (y * 100) / imageHeight;\n\n                    // browsers dont render more than 4 decimals so better cut away the others\n                    let newX = parseInt(target.style.left) + xpercentage;\n                    newX = Math.round(newX * 10000) / 10000\n\n                    let newY = parseInt(target.style.top) + ypercentage;\n                    newY = Math.round(newY * 10000) / 10000\n\n                    target.style.webkitTransform =\n                    target.style.transform =\n                    'translate(0px, 0px)';\n                    \n                    // manually set the new style so I don't need to render() again\n                    target.style.left = newX + '%'\n                    target.style.top = newY + '%'\n\n                    // really update the sensor values\n                    sensor.xlocation = newX\n                    sensor.ylocation = newY\n\n                    // reset the starting sensor points\n                    target.setAttribute('data-x', 0);\n                    target.setAttribute('data-y', 0);\n                }\n            });\n        }\n\n        function alignSensors(){\n            for (let group of ctrl.panel.groups) {\n                group.nextTop = undefined;\n                group.nextX = undefined;\n            }\n            for (let sensor of ctrl.panel.sensors) {\n                var sensorHeight = sensor.size + 30;\n                var sensorWidth = sensor.width + 10;\n                var group = getGroup(sensor.group.name)\n                if(group.alignment == \"left\"){\n                    if(group.nextTop === undefined){\n                        group.nextTop = group.y;\n                    }\n                    sensor.ylocationStr = group.nextTop + \"px\";\n                    sensor.xlocationStr = group.x + \"px\";\n                    group.nextTop = group.nextTop + sensorHeight;\n                } else if(group.alignment == \"middle\"){\n                    if(group.nextTop === undefined){\n                        group.nextTop = group.y;\n                    }\n                    sensor.ylocationStr = group.nextTop + \"px\";\n                    if(group.sameSize){\n                        sensor.xlocationStr = (group.x - (group.width/2)) + \"px\";\n                    }else{\n                        sensor.xlocationStr = (group.x - (sensor.width/2))+ \"px\";\n                    }\n                    group.nextTop = group.nextTop + sensorHeight;\n                } else if(group.alignment == \"right\"){\n                    if(group.nextTop === undefined){\n                        group.nextTop = group.y;\n                    }\n                    sensor.ylocationStr = group.nextTop + \"px\";\n                    if(group.sameSize){\n                        sensor.xlocationStr = (group.x - group.width) + \"px\";\n                    }else{\n                        sensor.xlocationStr = (group.x - sensor.width)+ \"px\";\n                    }\n                    group.nextTop = group.nextTop + sensorHeight;\n                } else if(group.alignment == \"top\"){\n                    if(group.nextX === undefined){\n                        group.nextX = group.x;\n                    }\n                    sensor.xlocationStr = group.nextX + \"px\";\n                    sensor.ylocationStr = group.y + \"px\";\n                    group.nextX = group.nextX + sensorWidth;\n                }    \n            }\n        }\n\n        this.events.on('render', function () {\n            render();\n            ctrl.renderingCompleted();\n        });\n    }\n\n    //------------------\n    // Color mapping stuff\n    //------------------\n\n    addColorMapping() {\n        this.panel.colorMappings.push(new ColorMapping('name', '#FFFFFF'));\n        this.refreshColorMappings();\n    }\n\n    removeColorMapping(map) {\n        var index = _.indexOf(this.panel.colorMappings, map);\n        this.panel.colorMappings.splice(index, 1);\n        this.refreshColorMappings();\n    }\n\n    refreshColorMappings() {\n        this.panel.colorMappingMap = _.keyBy(this.panel.colorMappings, mapping => mapping.name);\n        this.render();\n    }\n\n\n    //------------------\n    // Mapping stuff\n    //------------------\n\n    addValueMappingMap() {\n        this.panel.valueMappings.push(new ValueColorMapping('value', ''));\n    }\n\n    removeValueMappingMap(toRemove) {\n        var index = _.indexOf(this.panel.valueMappings, toRemove);\n        this.panel.valueMappings.splice(index, 1);\n        this.render();\n    }\n\n    /* addRangeMappingMap() {\n     this.panel.rangeMappingMap.push({from: '', to: '', text: ''});\n     }\n\n     removeRangeMappingMap(rangeMap) {\n     var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n     this.panel.rangeMappingMap.splice(index, 1);\n     this.render();\n     };*/\n}\n\nfunction ValueColorMapping(value,\n                           colorName) {\n    'use strict';\n    this.value = value;\n    this.colorName = colorName;\n}\n\n\nfunction ColorMapping(name, color) {\n    'use strict';\n    this.name = name;\n    this.color = color;\n}\n\nfunction Sensor(metric,\n                xlocation,\n                ylocation,\n                format,\n                bgcolor,\n                fontColor,\n                size,\n                bordercolor,\n                visible) {\n    'use strict';\n    this.metric = metric;\n    this.xlocation = xlocation;\n    this.ylocation = ylocation;\n    this.format = format;\n    this.bgcolor = bgcolor;\n    this.fontColor = fontColor;\n    this.size = size;\n    this.bordercolor = bordercolor;\n    this.visible = visible;\n    this.renderValue = false;\n    this.valueFormatted = '';\n    this.valueUnit = '';\n    this.displayName = '';\n    this.link_url = '';\n    this.resolvedLink = '';\n    this.rectangular = true;\n    this.group = 'A';\n}\n\nfunction Group(name, alignment, x, y) {\n    'use strict';\n    this.name = name;\n    this.alignment = alignment;\n    this.x = x;\n    this.y = y;\n    this.sameSize = false;\n    this.width = 100;\n}\nPictureItCtrl.templateUrl = 'module.html';\n"]}